services:

  postgres:
    hostname: postgres
    container_name: postgres
    image: postgres:14.1
    volumes:
      - ./docker-images/docker-psql:/docker-entrypoint-initdb.d
      - ./docker-images/docker-psql/multiple:/docker-entrypoint-initdb.d/multiple
    environment:
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
      - POSTGRES_MULTIPLE_DATABASES=staco
    ports:
      - "5432:5432"
    expose:
      - "5432"
    networks:
      staco_net:
        ipv4_address: ${STACO_AWS_POSTGRESQL_IP}

  localstack:
    image: localstack/localstack:0.13.0
    hostname: localstack
    container_name: localstack
    ports:
      - "4566:4566"
      - "4571:4571"
      - "8090:8090"
    environment:
      - SERVICES=${SERVICES}
      - DOCKER_HOST=unix:///var/run/docker.sock
      - PORT_WEB_UI=8090
      - DEFAULT_REGION=eu-central-1
      - DATA_DIR=/tmp/localstack/data
      - LAMBDA_EXECUTOR=local
      - START_WEB=1
    healthcheck:
      test: ["CMD", "/usr/bin/curl", "http://localhost:4566/health"]
    volumes:
      - "${TMPDIR:-/tmp/localstack}:/tmp/localstack"
    networks:
      staco_net:
        ipv4_address: ${STACO_AWS_LOCALSTACK_IP}

  aws-cli-1:
    image: amazon/aws-cli:2.4.0
    hostname: aws-cli-1
    container_name: aws-cli-1
    command: ssm --endpoint-url http://${STACO_AWS_LOCALSTACK_IP}:${STACO_AWS_LOCALSTACK_PORT} put-parameter --name /config/StaCoLsService/dev/postgres/username --value postgres --type text
    environment:
      - AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}
      - AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}
      - AWS_DEFAULT_REGION=${DEFAULT_REGION}
      - STACO_AWS_LOCALSTACK_IP=${STACO_AWS_LOCALSTACK_IP}
      - STACO_AWS_LOCALSTACK_PORT=${STACO_AWS_LOCALSTACK_PORT}
    depends_on:
      localstack:
        condition: service_healthy
    networks:
      staco_net:
        ipv4_address: ${STACO_AWS_CLI_1_IP}

  aws-cli-2:
    image: amazon/aws-cli:2.4.0
    hostname: aws-cli-2
    container_name: aws-cli-2
    command: ssm --endpoint-url http://${STACO_AWS_LOCALSTACK_IP}:${STACO_AWS_LOCALSTACK_PORT} put-parameter --name /config/StaCoLsService/dev/postgres/password --value admin --type text
    environment:
      - AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}
      - AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}
      - AWS_DEFAULT_REGION=${DEFAULT_REGION}
      - STACO_AWS_LOCALSTACK_IP=${STACO_AWS_LOCALSTACK_IP}
      - STACO_AWS_LOCALSTACK_PORT=${STACO_AWS_LOCALSTACK_PORT}
    depends_on:
      localstack:
        condition: service_healthy
    networks:
      staco_net:
        ipv4_address: ${STACO_AWS_CLI_2_IP}
  aws-cli-3:
    image: amazon/aws-cli:2.4.0
    hostname: aws-cli-3
    container_name: aws-cli-3
    command: s3api --endpoint-url http://${STACO_AWS_LOCALSTACK_IP}:${STACO_AWS_LOCALSTACK_PORT} create-bucket --bucket stacos

    environment:
      - AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}
      - AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}
      - AWS_DEFAULT_REGION=${DEFAULT_REGION}
      - STACO_AWS_LOCALSTACK_IP=${STACO_AWS_LOCALSTACK_IP}
      - STACO_AWS_LOCALSTACK_PORT=${STACO_AWS_LOCALSTACK_PORT}
    depends_on:
      localstack:
        condition: service_healthy
    networks:
      staco_net:
        ipv4_address: ${STACO_AWS_CLI_3_IP}

  aws-cli-4:
    image: amazon/aws-cli:2.4.0
    hostname: aws-cli-4
    container_name: aws-cli-4
    command: s3api --endpoint-url http://${STACO_AWS_LOCALSTACK_IP}:${STACO_AWS_LOCALSTACK_PORT} create-bucket --bucket images
    environment:
      - AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}
      - AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}
      - AWS_DEFAULT_REGION=${DEFAULT_REGION}
      - STACO_AWS_LOCALSTACK_IP=${STACO_AWS_LOCALSTACK_IP}
      - STACO_AWS_LOCALSTACK_PORT=${STACO_AWS_LOCALSTACK_PORT}
    depends_on:
      localstack:
        condition: service_healthy
    networks:
      staco_net:
        ipv4_address: ${STACO_AWS_CLI_4_IP}

  aws-cli-5:
    image: amazon/aws-cli:2.4.0
    hostname: aws-cli-5
    container_name: aws-cli-5
    command: ssm --endpoint-url http://${STACO_AWS_LOCALSTACK_IP}:${STACO_AWS_LOCALSTACK_PORT} put-parameter --name /config/StaCoLsService/dev/staco/app/user/name --value admin --type text
    environment:
      - AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}
      - AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}
      - AWS_DEFAULT_REGION=${DEFAULT_REGION}
      - STACO_AWS_LOCALSTACK_IP=${STACO_AWS_LOCALSTACK_IP}
      - STACO_AWS_LOCALSTACK_PORT=${STACO_AWS_LOCALSTACK_PORT}
    depends_on:
      localstack:
        condition: service_healthy
    networks:
      staco_net:
        ipv4_address: ${STACO_AWS_CLI_5_IP}

  aws-cli-6:
    image: amazon/aws-cli:2.4.0
    hostname: aws-cli-6
    container_name: aws-cli-6
    command: ssm --endpoint-url http://${STACO_AWS_LOCALSTACK_IP}:${STACO_AWS_LOCALSTACK_PORT} put-parameter --name /config/StaCoLsService/dev/staco/app/user/password --value admin --type text
    environment:
      - AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}
      - AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}
      - AWS_DEFAULT_REGION=${DEFAULT_REGION}
      - STACO_AWS_LOCALSTACK_IP=${STACO_AWS_LOCALSTACK_IP}
      - STACO_AWS_LOCALSTACK_PORT=${STACO_AWS_LOCALSTACK_PORT}
    depends_on:
      localstack:
        condition: service_healthy
    networks:
      staco_net:
        ipv4_address: ${STACO_AWS_CLI_6_IP}

  staco_app_service_reactive:
    hostname: staco_app_service_reactive
    container_name: staco_app_service_reactive
    build:
      context: stamps-and-coins-service/.
    ports:
      - "8081:8081"
    expose:
      - 8081
    environment:
      - AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}
      - AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}
      - AWS_DEFAULT_REGION=${DEFAULT_REGION}
      - STACO_APP_BACKEND_PROFILE=${STACO_APP_BACKEND_PROFILE}
      - STACO_AWS_LOCALSTACK_IP=${STACO_AWS_LOCALSTACK_IP}
      - STACO_AWS_POSTGRESQL_IP=${STACO_AWS_POSTGRESQL_IP}
    restart: on-failure
    deploy:
      resources:
        limits:
          memory: 400M
        reservations:
          memory: 400M
    networks:
      staco_net:
        ipv4_address: ${STACO_APP_SERVICE_REACTIVE_IP}

  staco_app_service_localstack:
    hostname: staco_app_service_localstack
    container_name: staco_app_service_localstack
    build:
      context: stamps-and-coins-ls-service/.
    ports:
      - "8082:8082"
    expose:
      - 8082
    environment:
      - AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}
      - AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}
      - AWS_DEFAULT_REGION=${DEFAULT_REGION}
      - STACO_APP_BACKEND_PROFILE=${STACO_APP_BACKEND_PROFILE}
      - STACO_AWS_LOCALSTACK_IP=${STACO_AWS_LOCALSTACK_IP}
    restart: on-failure
    deploy:
      resources:
        limits:
          memory: 400M
        reservations:
          memory: 400M
    networks:
      staco_net:
        ipv4_address: ${STACO_APP_SERVICE_LOCALSTACK_IP}

  staco_app_batch:
    hostname: staco_app_batch
    container_name: staco_app_batch
    build:
      context: stamps-and-coins-batch/.
    ports:
      - "8083:8083"
    expose:
      - 8083
    environment:
      - AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}
      - AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}
      - AWS_DEFAULT_REGION=${DEFAULT_REGION}
      - STACO_APP_BACKEND_PROFILE=${STACO_APP_BACKEND_PROFILE}
      - STACO_AWS_LOCALSTACK_IP=${STACO_AWS_LOCALSTACK_IP}
      - STACO_AWS_POSTGRESQL_IP=${STACO_AWS_POSTGRESQL_IP}
    restart: on-failure
    deploy:
      resources:
        limits:
          memory: 400M
        reservations:
          memory: 400M
    networks:
      staco_net:
        ipv4_address: ${STACO_APP_BATCH_IP}

  nginx:
    hostname: nginx
    container_name: nginx
    build:
      context: ./docker-images/nginx/.
    ports:
      - "8080:8080"
    restart: on-failure
    deploy:
      resources:
        limits:
          memory: 300M
        reservations:
          memory: 300M
    env_file:
      - .env
    networks:
      staco_net:
        ipv4_address: ${STACO_NGINX_IP}

networks:
  staco_net:
    driver: bridge
    ipam:
      driver: default
      config:
        - subnet: ${NETWORK_SUBNET}
